version: '3.4'

services:
  opensearch:
    image: opensearchproject/opensearch:1.2.4
    environment:
      discovery.type: single-node
      plugins.security.disabled: "true" # disable https and logins
      compatibility.override_main_response_version: "true"
    ports:
      - 9200:9200
      - 9600:9600 # required for Performance Analyzer

  # console at http://localhost:5601/app/dev_tools#/console
  # opensearch-dashboards:
  #   image: opensearchproject/opensearch-dashboards:1.2.0
  #   ports:
  #     - 5601:5601
  #   environment:
  #     OPENSEARCH_HOSTS: '["http://opensearch:9200"]'
  #     DISABLE_SECURITY_DASHBOARDS_PLUGIN: "true"

  kafkaproducerwikimedia:
    environment:
      - Kafka__BootstrapServers=kafka:19092
    image: ${DOCKER_REGISTRY-}kafkaproducerwikimedia
    build:
      context: .
      dockerfile: KafkaProducerWikimedia/Dockerfile
    depends_on:
      - seq
      - schema-registry

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zookeeper

  schema-registry:
    image: confluentinc/cp-schema-registry:7.3.0
    hostname: schema-registry
    container_name: schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:19092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    depends_on:
      - zookeeper
      - kafka

  postgresql:
    image: postgres:14
    hostname: postgresql
    container_name: postgresql
    environment:
      POSTGRES_DB: "conduktor-console"
      POSTGRES_USER: "conduktor"
      POSTGRES_PASSWORD: "change_me"
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256"

  # conduktor-console:
  #   image: conduktor/conduktor-console:1.21.0
  #   hostname: conduktor-console
  #   container_name: conduktor-console
  #   depends_on:
  #     - postgresql
  #   ports:
  #     - "8080:8080"
  #   volumes:
  #     - type: bind
  #       source: "./platform-config.yml"
  #       target: /opt/conduktor/platform-config.yaml
  #       read_only: true
  #   environment:
  #     CDK_IN_CONF_FILE: /opt/conduktor/platform-config.yaml

  conduktor-monitoring:
    hostname: conduktor-monitoring
    container_name: conduktor-monitoring
    image: conduktor/conduktor-console-cortex:1.21.0
    environment:
      CDK_CONSOLE-URL: "http://conduktor-console:8080"

  seq:
    container_name: seq
    image: datalust/seq:latest
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5341:80"

  kafkaconsumerwikirest:
    restart: always
    ports:
      - "8080:80"
    environment:
      - Kafka__BootstrapServers=kafka:19092
      - ASPNETCORE_ENVIRONMENT=Development
      - Kafka__TopicName=wikimedia-recent-changes3
    image: ${DOCKER_REGISTRY-}kafkaconsumerwikirest
    build:
      context: .
      dockerfile: KafkaConsumerWikiRest/Dockerfile
    depends_on:
      - seq
      - schema-registry
      - kafkaproducerwikimedia

volumes:
  pg_data: {}
  conduktor_data: {}
  redpanda-0: {}

